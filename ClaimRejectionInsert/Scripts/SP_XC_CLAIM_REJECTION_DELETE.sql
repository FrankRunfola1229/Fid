USE APP_CONFIG
GO

IF  OBJECT_ID('SP_XC_CLAIM_REJECTION_DELETE') IS NOT NULL
	BEGIN
		DROP PROCEDURE SP_XC_CLAIM_REJECTION_DELETE
   		PRINT '<< Procedure SP_XC_CLAIM_REJECTION_DELETE Dropped >>'
   	END
ELSE 	
	PRINT '<< Procedure SP_XC_CLAIM_REJECTION_DELETE DOES NOT EXIST >>'   	
GO

/*********************************************************************************
	NAME:			SP_XC_CLAIM_REJECTION_DELETE							
	DESCRIPTION:    DELETE CLAIM REJECTS TO STAGING TABLES
	DEVELOPER:      FRANK P. RUNFOLA
	DATE:			5/22/2019
*********************************************************************************/
CREATE PROC SP_XC_CLAIM_REJECTION_DELETE

   	   	@TABLE_NAME varchar(100),
	    @CLCL_ID  varchar(30)
AS
    EXEC('DELETE  FROM APP_WORK..' + @TABLE_NAME + '
		  WHERE   CLCL_ID = @CLCL_ID')
GO


IF  OBJECT_ID('SP_XC_CLAIM_REJECTION_DELETE') IS NOT NULL
   	PRINT '<< Procedure [SP_XC_CLAIM_REJECTION_DELETE] CREATED! >>'

GRANT EXECUTE ON APP_CONFIG..SP_XC_CLAIM_REJECTION_DELETE TO srvc_rejclaims GO


/********************************************************
				EXAMPLE SP EXECUTE
********************************************************

EXECUTE  APP_CONFIG..SP_XC_CLAIM_REJECTION_DELETE 

		'EDI_XC_PROV_NAME_REJECTED_CLAIMS',
		'016525268900'   
		
SELECT  * 
FROM	APP_WORK..EDI_XC_PROV_NAME_REJECTED_CLAIMS
WHERE   CLCL_ID =  '016525268900' 

SELECT  * 
FROM	APP_WORK..EDI_XC_PROV_TIN_REJECTED_CLAIMS
WHERE   CLCL_ID =  '<>' 

SELECT  * 
FROM	APP_WORK..EDI_XC_PROV_NPI_REJECTED_CLAIMS
WHERE   CLCL_ID =  '<>'

*/